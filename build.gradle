plugins {
    id 'org.springframework.boot' version '2.3.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.ame'
//version = '1.2'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' }
        mavenLocal()
        mavenCentral()
    }
}

dependencies {
    implementation 'com.github.gwenn:sqlite-dialect:0.1.2'
    implementation 'com.alibaba:fastjson:1.2.73'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version: '2.1.5'
    implementation 'junit:junit:4.12'
    implementation 'junit:junit:4.12'
    compile group: 'org.mybatis.generator', name: 'mybatis-generator-core', version: '1.3.4'
    implementation group: 'org.mybatis.generator', name: 'mybatis-generator-maven-plugin', version: '1.4.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.xerial:sqlite-jdbc'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'junit:junit:4.12.2'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'commons-httpclient:commons-httpclient:3.1'
}
apply plugin: 'java'
test {
    useJUnitPlatform()
}